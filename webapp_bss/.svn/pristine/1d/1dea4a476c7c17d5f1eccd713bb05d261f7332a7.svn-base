package com.yonghui.webapp.bss.api.bidplan;

import java.io.IOException;
import java.io.Writer;
import java.util.Calendar;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.yonghui.comp.admin.share.bean.AdminEntity;
import com.yonghui.comp.bidplan.share.BidPlanClient;
import com.yonghui.comp.bidplan.share.BidPlanService;
import com.yonghui.comp.bidplan.share.bean.BidPlanEntity;
import com.yonghui.webapp.bss.api.ApiHandler;
import com.yonghui.webapp.bss.util.JsonUtil;

import cn770880.jutil.data.DataPage;
import cn770880.jutil.data.RespWrapper;
import cn770880.jutil.string.StringUtil;

public class QueryHandler implements ApiHandler {

	@Override
	public void handle(HttpServletRequest request, HttpServletResponse response, Writer out, AdminEntity admin)
			throws IOException {
		RespWrapper<DataPage<BidPlanEntity>> resp = RespWrapper.makeResp(1001, "系统繁忙", null);
		
		int pageNo = StringUtil.convertInt(request.getParameter("pageNo"), 1);
		int pageSize = StringUtil.convertInt(request.getParameter("pageSize"), 20);
		
		String bpName = request.getParameter("bpName");
		int year = StringUtil.convertInt(request.getParameter("year"), 0);
		int month = StringUtil.convertInt(request.getParameter("month"), -1);
		int repeatType = StringUtil.convertInt(request.getParameter("repeatType"), 0);
		int status = StringUtil.convertInt(request.getParameter("status"), -1);

		Map<String, Object> params = new HashMap<String, Object>();
		params.put("bp_name", bpName);
		if(repeatType > 0) {
			params.put("repeated_type", repeatType);
		}
		if(status > -1) {
			params.put("status", status);
		}
		
		Calendar calendar = Calendar.getInstance();
		if(year > 0 || month > -1) {
			if(year > 0) {
				calendar.set(Calendar.YEAR, year);
			}
			if(month > -1) {
				calendar.set(Calendar.MONTH, month);
			}
			calendar.set(Calendar.DAY_OF_MONTH, 1);
			calendar.set(Calendar.HOUR_OF_DAY, 0);
			calendar.set(Calendar.MINUTE, 0);
			calendar.set(Calendar.SECOND, 0);
			calendar.set(Calendar.MILLISECOND, 0);
			long startTime = calendar.getTimeInMillis();
			params.put("start_time", startTime);
			
			calendar.set(Calendar.HOUR_OF_DAY, 23);
			calendar.set(Calendar.MINUTE, 59);
			calendar.set(Calendar.SECOND, 59);
			calendar.set(Calendar.MILLISECOND, 999);
			long endTime = calendar.getTimeInMillis();
			params.put("end_time", endTime);
		}
		
		BidPlanService service = BidPlanClient.getBidPlanService();
		resp = service.query(params, pageNo, pageSize);
		
		JsonUtil.MAPPER.writeValue(out, resp);
	}
	
	

}
