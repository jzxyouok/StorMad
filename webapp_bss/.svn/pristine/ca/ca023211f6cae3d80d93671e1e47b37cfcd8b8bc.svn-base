package com.yonghui.webapp.bss.api.bidplan;

import java.io.IOException;
import java.io.Writer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.yonghui.comp.admin.share.bean.AdminEntity;
import com.yonghui.comp.bidplan.share.BidPlanClient;
import com.yonghui.comp.bidplan.share.BidPlanService;
import com.yonghui.comp.bidplan.share.bean.BidPlanEntity;
import com.yonghui.comp.bidplan.share.enums.BidPlanStatus;
import com.yonghui.webapp.bss.api.ApiHandler;
import com.yonghui.webapp.bss.util.JsonUtil;

import cn770880.jutil.data.RespWrapper;
import cn770880.jutil.string.StringUtil;

public class CreateHandler implements ApiHandler {

	@Override
	public void handle(HttpServletRequest request, HttpServletResponse response, Writer out, AdminEntity admin)
			throws IOException {
		RespWrapper<Integer> resp = RespWrapper.makeResp(4001, "新增档期失败", null);
		
		String bpName = request.getParameter("bpName");
		String iids = request.getParameter("iids");
		long startDate = StringUtil.convertLong(request.getParameter("startDate"), 0);
		long endDate = StringUtil.convertLong(request.getParameter("endDate"), 0);
		long startTime = StringUtil.convertLong(request.getParameter("startTime"), 0);
		long endTime = StringUtil.convertLong(request.getParameter("endTime"), 0);
		long cStartTime = StringUtil.convertLong(request.getParameter("cStartTime"), 0);
		long cEndTime = StringUtil.convertLong(request.getParameter("cEndTime"), 0);
		int repeatType = StringUtil.convertInt(request.getParameter("repeatType"), 0);
		int chargeType = StringUtil.convertInt(request.getParameter("chargeType"), 0);
		String alids = request.getParameter("alIds");
		String areaCodes = request.getParameter("aIds");
		String shopCodes = request.getParameter("sIds");
		String basePrice = request.getParameter("basePrice");
		String incRange = request.getParameter("incRange");
		long crtTime = System.currentTimeMillis();
		int operator = admin.getAdmUin();
		long opTime = System.currentTimeMillis();
		
		System.out.println("StartTime["+ startTime +"]    endTime["+ endTime +"]");
		
		if(endTime == 0) {
			endTime = 24 * 60 * 60 * 1000 - 1;
		} else {
			endTime = endTime * 60 * 60 * 1000;
		}
		startTime = startTime * 60 * 60 * 1000;
		
		BidPlanEntity entity = new BidPlanEntity();
		entity.setBpName(bpName);
		entity.setIIds(iids);
		entity.setStartDate(startDate);
		entity.setEndDate(endDate);
		entity.setStartTime(startTime);
		entity.setEndTime(endTime);
		entity.setCStartTime(cStartTime);
		entity.setCEndTime(cEndTime);
		entity.setRepeatedType(repeatType);
		entity.setChargeType(chargeType);
		entity.setAlIds(alids);
		entity.setAreaCodes(areaCodes);;
		entity.setShopCodes(shopCodes);;
		entity.setCBasePrice(new Float(basePrice).intValue() * 100);
		entity.setCIncRange(new Float(incRange).intValue());
		entity.setCreateTime(crtTime);
		entity.setAdmUin(operator);
		entity.setOptime(opTime);
		entity.setStatus(BidPlanStatus.USING.getStatus());
		
		BidPlanService service = BidPlanClient.getBidPlanService();
		resp = service.add(entity);
		
		JsonUtil.MAPPER.writeValue(out, resp);
	}

}
