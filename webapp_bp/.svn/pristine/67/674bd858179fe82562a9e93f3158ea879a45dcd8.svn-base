package com.yonghui.webapp.bp.api.bidplan;

import java.io.IOException;
import java.io.Writer;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.yonghui.comp.ader.share.bean.AderEntity;
import com.yonghui.comp.bidplan.share.BidPlanClient;
import com.yonghui.comp.bidplan.share.BidPlanService;
import com.yonghui.comp.bidplan.share.bean.BidPlanEntity;
import com.yonghui.webapp.bp.api.ApiHandler;
import com.yonghui.webapp.bp.util.JsonUtil;

import cn770880.jutil.data.RespWrapper;
import cn770880.jutil.string.StringUtil;

public class QueryHandler implements ApiHandler {

	@Override
	public void handle(HttpServletRequest request, HttpServletResponse response, Writer out, AderEntity ader)
			throws IOException {
		RespWrapper<Integer> resp = RespWrapper.makeResp(4001, "新增档期失败", null);
		
		String bpName = request.getParameter("bpName");
		String iids = request.getParameter("iids");
		long startTime = StringUtil.convertLong(request.getParameter("startTime"), 0);
		long endTime = StringUtil.convertLong(request.getParameter("endTime"), 0);
		long cStartTime = StringUtil.convertLong(request.getParameter("cStartTime"), 0);
		long cEndTime = StringUtil.convertLong(request.getParameter("cEndTime"), 0);
		int repeatType = StringUtil.convertInt(request.getParameter("repeatType"), 0);
		int chargeType = StringUtil.convertInt(request.getParameter("changeType"), 0);
		String alids = request.getParameter("alids");
		String aids = request.getParameter("aids");
		String sids = request.getParameter("sids");
		int basePrice = StringUtil.convertInt(request.getParameter("basePrice"), 0);
		int incRange = StringUtil.convertInt(request.getParameter("incRange"), 0);
		long crtTime = System.currentTimeMillis();
		int operator = 0;
		long opTime = System.currentTimeMillis();
		
		BidPlanEntity entity = new BidPlanEntity();
		entity.setBpName(bpName);
		entity.setIIds(iids);
		entity.setStartTime(startTime);
		entity.setEndTime(endTime);
		entity.setCStartTime(cStartTime);
		entity.setCEndTime(cEndTime);
		entity.setRepeatedType(repeatType);
		entity.setChargeType(chargeType);
		entity.setAlIds(alids);
		entity.setAIds(aids);
		entity.setSIds(sids);
		entity.setCBasePrice(basePrice);
		entity.setCIncRange(incRange);
		entity.setCreateTime(crtTime);
		entity.setAdmUin(operator);
		entity.setOptime(opTime);
		
		BidPlanService service = BidPlanClient.getBidPlanService();
		resp = service.add(entity);
		
		JsonUtil.MAPPER.writeValue(out, resp);
	}

}
