package com.yonghui.webapp.filter;

import java.io.IOException;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.feizhu.webutil.net.CookieBox;


public class BpFilter implements Filter{
    @Override
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException 	{
        HttpServletRequest req = (HttpServletRequest)  request;
        HttpServletResponse res = (HttpServletResponse) response;
        String uri = req.getRequestURI();
    	
    	//让浏览器不缓存html文件
    	if( uri.endsWith( ".html") || uri.endsWith("/") ){
        	res.setHeader("Cache-Control", "no-store");  
        	res.setHeader("Pragma", "no-cache");  
        	res.setDateHeader("Expires", 0); 
    	}
    	
    	//如果sid失效就302到 login.html
    	if(  !uri.equals("/login.html") 
    			&& ( uri.endsWith( ".html") || uri.endsWith("/")  )
    			){
            CookieBox cookieBox = new CookieBox( req, res );
            Cookie cookie = cookieBox.getCookie( "bp_sid");
            if( cookie == null ){
            	res.sendRedirect("/login.html");
            	return;
            }
//           String sid = cookie.getValue();
//            if( user == null ){
//            	res.sendRedirect("/login.html");
//            	return;
//            }
//            if( user.getRole() >= 0 ){
//            	res.sendRedirect("/login.html");
//            	return;
//            }
    	}
    	
    	//继续执行下一个filter
        chain.doFilter( req, res );
		return;
	}
    @Override
	public void init(FilterConfig filterConfig) throws ServletException {
	}
    @Override
	public void destroy(){
	}
}
